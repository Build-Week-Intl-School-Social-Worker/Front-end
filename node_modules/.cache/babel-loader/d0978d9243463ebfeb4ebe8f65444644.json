{"ast":null,"code":"var _jsxFileName = \"/Users/shawntompke/Desktop/Lambda-Projects/week12/Front-end/src/components/CreateStudentProfileForm.js\";\nimport React, { useState } from 'react';\nimport { withFormik, Form, Field, Formik } from 'formik'; // import axios from 'axios';\n\nimport * as Yup from 'yup';\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nimport { useHistory } from 'react-router-dom';\nimport { RedAlert } from './ErrorStyles'; // import TextField from '@material-ui/core/TextField';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { DatePicker } from 'formik-material-ui-pickers';\nimport { TextField, Select } from 'formik-material-ui'; // import { makeStyles } from '@material-ui/core/styles';\n\nimport { CreateStudent, FormSection, FormRow, FormCol } from './CreateStudentStyles.js.js';\nimport { ScaleLoader } from \"react-spinners\"; // import { red } from '@material-ui/core/colors';\n\nconst CreateStudentProfile = ({\n  value,\n  errors,\n  touched,\n  status\n}) => {\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const loadingHandler = () => {\n    setLoading(!loading);\n  };\n\n  const [student, newStudent] = useState({\n    name: '',\n    age: 0,\n    grade: '',\n    image: null,\n    bio: '',\n    status: '',\n    insurance_card: false,\n    expire_date: '',\n    birth_cert: false,\n    special_needs: '',\n    child_rep: '',\n    child_rep_phone: '',\n    child_rep_email: ''\n  });\n  return React.createElement(CreateStudent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \" Create Student Profile \"), React.createElement(FormSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(FormRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Name\",\n    name: \"name\",\n    type: \"text\",\n    placeHolder: \"Enter Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), touched.name && errors.name && React.createElement(RedAlert, {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, errors.name)), React.createElement(\"label\", {\n    htmlFor: \"age\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: \"age\",\n    type: \"text\",\n    placeHolder: \"Enter Age\",\n    label: \"Enter Age\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), touched.age && errors.age && React.createElement(RedAlert, {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, errors.age)), React.createElement(\"label\", {\n    htmlFor: \"grade\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"grade\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Grade:  \"), React.createElement(Select, {\n    inputProps: {\n      id: 'grade'\n    },\n    label: \"Insurance Card:\",\n    as: \"select\",\n    name: \"grade\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: 'k',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"K\"), React.createElement(MenuItem, {\n    value: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"1\"), React.createElement(MenuItem, {\n    value: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"2\"), React.createElement(MenuItem, {\n    value: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"3\"), React.createElement(MenuItem, {\n    value: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"4\"), React.createElement(MenuItem, {\n    value: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"5\"), React.createElement(MenuItem, {\n    value: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"6\"), React.createElement(MenuItem, {\n    value: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"7\"), React.createElement(MenuItem, {\n    value: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"8\"), React.createElement(MenuItem, {\n    value: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"9\"), React.createElement(MenuItem, {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"10\"), React.createElement(MenuItem, {\n    value: 11,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"11\"), React.createElement(MenuItem, {\n    value: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"12\")), touched.grade && errors.grade && React.createElement(RedAlert, {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, errors.grade)))), React.createElement(FormSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"bio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Bio:\",\n    name: \"bio\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), touched.bio && errors.bio && React.createElement(RedAlert, {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, errors.bio)), React.createElement(\"label\", {\n    htmlFor: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Status:\",\n    name: \"status\",\n    type: \"text\",\n    placeHolder: \"Enter Status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), touched.status && errors.status && React.createElement(RedAlert, {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, errors.status))), React.createElement(FormSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(FormRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"insurance_card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Insurance Card:\", React.createElement(Select, {\n    inputProps: {\n      id: 'insurance_card'\n    },\n    label: \"Insurance Card:\",\n    as: \"select\",\n    name: \"insurance_card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"No\"), React.createElement(MenuItem, {\n    value: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Yes\")), touched.insurance_card && errors.insurance_card && React.createElement(RedAlert, {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, errors.insurance_card)), React.createElement(TextField, {\n    label: \"Expiration Date:\",\n    name: \"expire_date\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  })), React.createElement(FormRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"birth-cert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Birth Certificate:\", React.createElement(Select, {\n    label: \"Birth Certificate:\",\n    as: \"select\",\n    name: \"birth_cert\",\n    inputProps: {\n      id: 'birth-cert'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"No\"), React.createElement(MenuItem, {\n    value: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Yes\")), touched.birth_cert && errors.birth_cert && React.createElement(RedAlert, {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, errors.birth_cert)), React.createElement(\"label\", {\n    htmlFor: \"special_needs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Special Needs:\",\n    name: \"special_needs\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), touched.special_needs && errors.special_needs && React.createElement(RedAlert, {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, errors.special_needs)))), React.createElement(FormSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(FormRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"child_rep\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Representative:\",\n    name: \"child_rep\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }), touched.child_rep && errors.child_rep && React.createElement(RedAlert, {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, errors.child_rep)), React.createElement(\"label\", {\n    htmlFor: \"child_rep_phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Representative Phone:\",\n    name: \"child_rep_phone\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }), touched.child_rep_phone && errors.child_rep_phone && React.createElement(RedAlert, {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, errors.child_rep_phone)), React.createElement(\"label\", {\n    htmlFor: \"child_rep_email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Representative Email:\",\n    name: \"child_rep_email\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }), touched.child_rep_email && errors.child_rep_email && React.createElement(RedAlert, {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, errors.child_rep_email)))), React.createElement(\"button\", {\n    onClick: loadingHandler,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \"Create\"), React.createElement(ScaleLoader, {\n    size: 150 //size={\"150px\"} this also works\n    ,\n    color: \"#123abc\",\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  })));\n};\n\nconst CreateStudentSubmit = withFormik({\n  mapPropsToValues(props) {\n    return {\n      name: props.name || '',\n      age: props.age || '',\n      grade: props.age || '',\n      image: null,\n      bio: props.bio || '',\n      status: props.status || '',\n      insurance_card: props.insurance_card || false,\n      expire_date: props.expire_date || '',\n      birth_cert: props.birth_cert || false,\n      special_needs: props.special_needs || '',\n      child_rep: props.child_rep || '',\n      child_rep_phone: props.child_rep_phone || '',\n      child_rep_email: props.child_rep_email || ''\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required(\"name is required!\"),\n    age: Yup.string().required(\"Age is required!\"),\n    grade: Yup.string().required(\"Grade is required!\"),\n    bio: Yup.string().required(\"Bio is required!\"),\n    status: Yup.string().required(\"Status is required!\"),\n    insurance_card: Yup.string().required(\"Insurance is required!\"),\n    expire_date: Yup.string().required(\"Expire date is required!\"),\n    birth_cert: Yup.string().required(\"Birth Cert is required!\"),\n    special_needs: Yup.string().required(\"Sepcial needs is required!\"),\n    child_rep: Yup.string().required(\"Child rep is required!\"),\n    child_rep_phone: Yup.string().required(\"Rep phone is required!\"),\n    child_rep_email: Yup.string().required(\"Rep email is required!\")\n  }),\n\n  handleSubmit(values, {\n    resetForm,\n    ...props\n  }) {\n    axiosWithAuth().post('https://school-social-worker.herokuapp.com/api/students', values).then(response => {\n      console.log('Created Student Success: ', response);\n      props.props.history.push('/');\n    }).catch(err => {\n      console.log('Failed to creat student: ', err.message);\n      console.log(props); // props.loadingHandler()\n    });\n  }\n\n})(CreateStudentProfile);\nexport default CreateStudentSubmit;","map":{"version":3,"sources":["/Users/shawntompke/Desktop/Lambda-Projects/week12/Front-end/src/components/CreateStudentProfileForm.js"],"names":["React","useState","withFormik","Form","Field","Formik","Yup","axiosWithAuth","useHistory","RedAlert","MenuItem","InputLabel","DatePicker","TextField","Select","CreateStudent","FormSection","FormRow","FormCol","ScaleLoader","CreateStudentProfile","value","errors","touched","status","loading","setLoading","history","loadingHandler","student","newStudent","name","age","grade","image","bio","insurance_card","expire_date","birth_cert","special_needs","child_rep","child_rep_phone","child_rep_email","id","CreateStudentSubmit","mapPropsToValues","props","validationSchema","object","shape","string","required","handleSubmit","values","resetForm","post","then","response","console","log","push","catch","err","message"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { withFormik, Form, Field, Formik } from 'formik';\n// import axios from 'axios';\nimport * as Yup from 'yup';\nimport {axiosWithAuth} from '../utils/axiosWithAuth';\nimport { useHistory } from 'react-router-dom';\n\nimport { RedAlert } from './ErrorStyles';\n\n// import TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { DatePicker } from 'formik-material-ui-pickers';\nimport { TextField, Select } from 'formik-material-ui';\n\n\n// import { makeStyles } from '@material-ui/core/styles';\n\n\n\n\n\nimport { CreateStudent, FormSection, FormRow, FormCol } from './CreateStudentStyles.js.js';\n\nimport { ScaleLoader } from \"react-spinners\";\n// import { red } from '@material-ui/core/colors';\n\n\n\n\nconst CreateStudentProfile = ({value, errors, touched, status}) => {\n    const [loading, setLoading] = useState(false);\n\n    \n    const history = useHistory();\n    const loadingHandler = () => {\n        setLoading(!loading)\n    }\n\n    const [ student, newStudent ] = useState({\n        name: '',\n        age: 0,\n        grade: '',\n        image: null,\n        bio: '',\n        status: '',\n        insurance_card: false,\n        expire_date: '',\n        birth_cert: false,\n        special_needs: '',\n        child_rep: '',\n        child_rep_phone: '',\n        child_rep_email: ''\n    })\n\n    return (\n        \n        <CreateStudent>\n        <Form>\n                    \n            <h2> Create Student Profile </h2>\n            <FormSection>\n                <FormRow>\n                    <label htmlFor='name'>\n                        \n                        <TextField id=\"standard-basic\" label=\"Name\" name='name'  type='text' placeHolder='Enter Name'  />\n                        {touched.name && errors.name && (<RedAlert className=\"errors\">{errors.name}</RedAlert>)}\n\n                    </label>\n                        \n                    <label htmlFor='age'>\n                        \n                        <TextField name='age' type='text' placeHolder='Enter Age' label=\"Enter Age\"  />\n                        {touched.age && errors.age && (<RedAlert className=\"errors\">{errors.age}</RedAlert>)}\n\n                    </label>\n\n                    <label htmlFor='grade'>\n                        \n\n\n\n\n                        <InputLabel htmlFor='grade'>Grade:  </InputLabel>\n                            \n                        <Select inputProps={{id: 'grade',}} label=\"Insurance Card:\" as='select' name='grade' >\n                            <MenuItem value={'k'}>K</MenuItem>\n                            <MenuItem value={1}>1</MenuItem> \n                            <MenuItem value={2}>2</MenuItem> \n                            <MenuItem value={3}>3</MenuItem> \n                            <MenuItem value={4}>4</MenuItem> \n                            <MenuItem value={5}>5</MenuItem> \n                            <MenuItem value={6}>6</MenuItem> \n                            <MenuItem value={7}>7</MenuItem> \n                            <MenuItem value={8}>8</MenuItem> \n                            <MenuItem value={9}>9</MenuItem> \n                            <MenuItem value={10}>10</MenuItem> \n                            <MenuItem value={11}>11</MenuItem> \n                            <MenuItem value={12}>12</MenuItem> \n                        </Select>\n                        {touched.grade && errors.grade && (<RedAlert className=\"errors\">{errors.grade}</RedAlert>)}\n\n\n\n\n\n                    </label>\n                </FormRow>\n            </FormSection>\n\n                {/* <label htmlFor='image'>\n                    Name:\n                    <Field name='image' type='text' placeHolder='Enter Image' />\n                </label> */}\n                <FormSection>\n                    \n                    <label htmlFor='bio'>\n\n                        <TextField label=\"Bio:\" name='bio' type='text' />\n                        {touched.bio && errors.bio && (<RedAlert className=\"errors\">{errors.bio}</RedAlert>)}\n\n                    </label>\n                    \n                    \n                    <label htmlFor='status'>\n\n                        <TextField  label=\"Status:\" name='status' type='text' placeHolder='Enter Status' />\n                        {touched.status && errors.status && (<RedAlert className=\"errors\">{errors.status}</RedAlert>)}\n\n                    </label>\n                    \n                </FormSection>\n\n            <FormSection>\n  \n                    \n                        <FormRow>\n\n\n                        <InputLabel htmlFor='insurance_card'>Insurance Card: \n                            \n                            <Select inputProps={{id: 'insurance_card',}} label=\"Insurance Card:\" as='select' name='insurance_card' >\n                                <MenuItem value={false}>No</MenuItem>\n                                <MenuItem value={true}>Yes</MenuItem> \n                            </Select>\n                                  {touched.insurance_card && errors.insurance_card && (<RedAlert className=\"errors\">{errors.insurance_card}</RedAlert>)}\n\n                            </InputLabel>\n\n\n                        \n                        <TextField  label=\"Expiration Date:\" name='expire_date' type='text'  />\n                        </FormRow>\n                        \n                        <FormRow>\n\n                            <InputLabel htmlFor=\"birth-cert\">Birth Certificate: \n                            <Select  label=\"Birth Certificate:\" as='select' name='birth_cert' inputProps={{id: 'birth-cert',}}>\n                                <MenuItem value={false}>No</MenuItem>\n                                <MenuItem value={true}>Yes</MenuItem>\n                            </Select>    \n                                  {touched.birth_cert && errors.birth_cert && (<RedAlert className=\"errors\">{errors.birth_cert}</RedAlert>)}    \n\n                            </InputLabel>\n\n                    \n\n\n\n\n                        <label htmlFor='special_needs'>\n\n\n                            <TextField label=\"Special Needs:\"  name='special_needs' type='text' />\n                            {touched.special_needs && errors.special_needs && (<RedAlert className=\"errors\">{errors.special_needs}</RedAlert>)}\n\n                        </label>\n                        </FormRow>\n\n\n            </FormSection>\n\n            <FormSection>\n\n                    <FormRow>\n                        <label htmlFor='child_rep'>\n\n\n                            <TextField label=\"Representative:\" name='child_rep' type='text' />\n                            {touched.child_rep && errors.child_rep && (<RedAlert className=\"errors\">{errors.child_rep}</RedAlert>)}\n\n                        </label>                    \n\n                \n\n                        <label htmlFor='child_rep_phone'>\n\n                            <TextField label=\"Representative Phone:\" name='child_rep_phone' type='text'  />\n                            {touched.child_rep_phone && errors.child_rep_phone && (<RedAlert className=\"errors\">{errors.child_rep_phone}</RedAlert>)}\n\n                        </label>\n\n\n                        <label htmlFor='child_rep_email'>\n\n\n                            <TextField label=\"Representative Email:\" name='child_rep_email' type='text'  />\n                            {touched.child_rep_email && errors.child_rep_email && (<RedAlert className=\"errors\">{errors.child_rep_email}</RedAlert>)}\n\n                        </label>\n                    </FormRow>\n\n            </FormSection>\n\n            <button onClick={loadingHandler} type=\"submit\">Create</button>\n            <ScaleLoader\n            \n            size={150}\n            //size={\"150px\"} this also works\n            color={\"#123abc\"}\n            loading={loading}\n            />\n\n        </Form>\n        </CreateStudent>\n    )\n}\n\nconst CreateStudentSubmit = withFormik({\n    mapPropsToValues(props){\n        return {\n            name: props.name || '',\n            age: props.age || '',\n            grade: props.age || '',\n            image: null,\n            bio: props.bio || '',\n            status: props.status || '',\n            insurance_card: props.insurance_card || false,\n            expire_date: props.expire_date || '',\n            birth_cert: props.birth_cert || false,\n            special_needs: props.special_needs || '',\n            child_rep: props.child_rep || '',\n            child_rep_phone: props.child_rep_phone || '',\n            child_rep_email: props.child_rep_email || ''\n        };\n    },\n\n\n    validationSchema: Yup.object().shape({\n        name: Yup.string().required(\"name is required!\"),\n        age: Yup.string().required(\"Age is required!\"),\n        grade: Yup.string().required(\"Grade is required!\"),\n        bio: Yup.string().required(\"Bio is required!\"),\n        status: Yup.string().required(\"Status is required!\"),\n        insurance_card: Yup.string().required(\"Insurance is required!\"),\n        expire_date: Yup.string().required(\"Expire date is required!\"),\n        birth_cert: Yup.string().required(\"Birth Cert is required!\"),\n        special_needs: Yup.string().required(\"Sepcial needs is required!\"),\n        child_rep: Yup.string().required(\"Child rep is required!\"),\n        child_rep_phone: Yup.string().required(\"Rep phone is required!\"),\n        child_rep_email: Yup.string().required(\"Rep email is required!\")\n    }),\n\n    handleSubmit(values, {resetForm,   ...props}) {\n\n        axiosWithAuth()\n        .post('https://school-social-worker.herokuapp.com/api/students', values)\n        .then( response => {\n\n            console.log('Created Student Success: ', response);\n            props.props.history.push('/')\n        })\n        .catch ( err => {\n            console.log('Failed to creat student: ', err.message)\n            console.log(props)\n            // props.loadingHandler()\n        });\n        \n    }\n\n})(CreateStudentProfile)\n\nexport default CreateStudentSubmit;"]},"metadata":{},"sourceType":"module"}